---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Code Pipeline for Rocketchat Containers

Parameters:
  CodeBuildServiceRoleArn:
    Type: String
    AllowedPattern: ^|(arn:aws:iam:)([a-zA-Z0-9/:-])*([a-zA-Z0-9])$
    MinLength: 1

  EnvironmentName:
    Type: String
    MinLength: 1

  ImageTag:
    Type: String
    Default: latest

  CodePipelineServiceRoleArn:
    Type: String

  ArtifactBucket:
    Type: String

  ClusterName:
    Type: String

  ServiceName:
    Type: String

  S3Bucket:
    Type: String

Resources:
  ContainerBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${EnvironmentName}-RocketChat-Container-Build"
      Description: Building Container Images for Rocketchat App
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Artifacts:
        Type: "CODEPIPELINE"
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Logging in to Amazon ECR....
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) 
            build:
              commands:
                - echo "Pulling RocketChat image from Docker Hub..."
                - docker pull rocket.chat:$IMAGE_TAG
                - docker tag rocket.chat:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ROCKETCHAT_REPO_NAME:$IMAGE_TAG
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ROCKETCHAT_REPO_NAME
                - echo "Pulling the Mongo image from Docker Hub..."
                - docker pull mongo:4.0
                - docker tag mongo:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$MONGO_REPO_NAME:4.0
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$MONGO_REPO_NAME
            post_build:
              commands:
                - echo Build completed on `date`
                - printf '[{"name":"%s","imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s:%s"}]' "$ROCKETCHAT_IMAGE_REPO_NAME" "$AWS_ACCOUNT_ID" "$AWS_DEFAULT_REGION" "$ROCKETCHAT_IMAGE_REPO_NAME" "$IMAGE_TAG" > rocketchatimage.json
                - cat rocketchatimage.json
                - printf '[{"name":"%s","imageUri":"%s.dkr.ecr.%s.amazonaws.com/%s:%s"}]' "$MONGO_IMAGE_REPO_NAME" "$AWS_ACCOUNT_ID" "$AWS_DEFAULT_REGION" "$MONGO_IMAGE_REPO_NAME" "$IMAGE_TAG" > mongoimage.json
                - cat mongoimages.json
          artifacts:
            files:
              - rocketchatimage.json
              - mongoimage.json
      Environment:
        ComputeType: "BUILD_GENERAL1_MEDIUM"
        Image: "aws/codebuild/standard:4.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Sub ${AWS::AccountId}
          - Name: IMAGE_TAG
            Value: !Ref ImageTag
          - Name: ROCKETCHAT_IMAGE_REPO_NAME
            Value: !Sub ${EnvironmentName}-rocketchat
          - Name: MONGO_IMAGE_REPO_NAME
            Value: !Sub ${EnvironmentName}-mongo

  UpdateService:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${EnvironmentName}-UpdateService"
      Description: Update service of containers
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Artifacts:
        Type: "CODEPIPELINE"
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Logging in to Amazon ECR....
                - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) 
            build:
              commands:
               - aws ecs update-service --cluster $CLUSTER_NAME --desired-count 1 --service $SERVICE_NAME
            post_build:
              commands:
                - echo service updated
      Environment:
        ComputeType: "BUILD_GENERAL1_MEDIUM"
        Image: "aws/codebuild/standard:4.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CLUSTER_NAME
            Value: !Sub ${ClusterName}
          - Name: ENVIRONMENT_NAME
            Value: !Sub ${EnvironmentName}
          - Name: SERVICE_NAME
            Value: !Sub ${ServiceName}

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${EnvironmentName}-RocketChatContainerPipeline"
      RoleArn: !Ref CodePipelineServiceRoleArn
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      Stages:
        - Name: Commit
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: S3
              Configuration:
                S3Bucket: !Ref S3Bucket
                S3ObjectKey: rocketchat.zip
                PollForSourceChanges: False
              OutputArtifacts:
                - Name: App
        - Name: BuildContainers
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ContainerBuild
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployRocketChat
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: ECS
              Configuration:
                ClusterName: !Sub ${ClusterName}
                ServiceName: !Sub "${ServiceName}"
                FileName: rocketchatimages.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: UpdateService
          Actions:
            - Name: UpdateService
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateService
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

Outputs:
  CodeBuildProject:
    Description: "Container Build CodeBuild Project"
    Value: !Ref ContainerBuild

  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
